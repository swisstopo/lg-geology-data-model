name: Generate markdown and PDF documents


on:
  workflow_call:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - master
      - develop
      - 'releases/**'
      - schema_gmu


jobs:
  build-markdown:
    name: Generating Markdown files
    runs-on: "ubuntu-latest"
    steps:
      - name: Set up TeX Live
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-xetex texlive-fonts-recommended texlive-plain-generic

      - name: Install Pandoc
        run: sudo apt-get install -y pandoc
      - name: Checkout coded_domains
        uses: actions/checkout@v4
      - name: Install miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: DATAMODEL
          environment-file: environment.yaml
      - name: Check conda installation
        shell: bash -el {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      - name: Set Package Version
        shell: bash -l {0}
        run: |
          echo "version=$(<VERSION)" >> $GITHUB_ENV
          echo "=== PKG_VERSION=$version ==="
          echo "RELEASE=$(python -c "import yaml; print(yaml.safe_load(open('datamodel.yaml'))['model']['revision'])")" >> $GITHUB_ENV
          echo "=== RELEASE=$RELEASE ==="


      - name: Pip install
        shell: bash -el {0}
        run: pip install -e .
        
      - name: Validate
        shell: bash -el {0}
        run: make validate

      - name: Generate graph
        shell: bash -el {0}
        run: |
          python ./create_gv.py
    
      - name: Build all targets
        shell: bash -el {0}
        run: |
             make cleanall all
             # make diagram
             

      - name: Generate PDF from PUML diagram
        uses: rotaract/plantuml-action@v1
        with:
          format: svg
          pattern: outputs/ER-GCOVER.puml
      - name: Install rsvg-convert
        run: |
          sudo apt-get update
          sudo apt-get install -y librsvg2-bin

      - name: Convert SVG to PDF
        run: |
          # Convert SVG to PDF (maintains vector format)
          rsvg-convert -f pdf -o outputs/ER-GCOVER.pdf outputs/ER-GCOVER.svg


      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: geology-data-model-${{ env.RELEASE }}
          path: |
            outputs/de/datamodel.pdf
            outputs/fr/datamodel.pdf
            outputs/de/datamodel.docx
            outputs/fr/datamodel.docx
            outputs/fr/datamodel.html
            outputs/de/datamodel.html
            outputs/de/datamodel.css
            outputs/fr/datamodel.css
            outputs/de/geocover.png
            outputs/fr/geocover.png
            outputs/ER-GCOVER.svg
            outputs/ER-GCOVER.pdf
            exports/2025-05-26/GCOVERP_export_simple.json
            datamodel.yaml

